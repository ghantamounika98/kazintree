{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const fetchAll = useCallback(async () => {\n    try {\n      const employeesData = await fetchWithCache(\"employees\");\n      setEmployees(employeesData);\n      setSelectedEmployee(null);\n    } catch (error) {\n      console.error(\"Error fetching all employees:\", error);\n    }\n  }, [fetchWithCache]);\n  const fetchByEmployee = useCallback(async employeeId => {\n    try {\n      const employeeData = await fetchWithCache(`employees/${employeeId}`);\n      setEmployees([employeeData]);\n      setSelectedEmployee(employeeId);\n    } catch (error) {\n      console.error(`Error fetching employee with ID ${employeeId}:`, error);\n    }\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n    setSelectedEmployee(null);\n  }, []);\n  return {\n    data: employees,\n    loading,\n    fetchAll,\n    fetchByEmployee,\n    invalidateData,\n    selectedEmployee\n  };\n}\n\n_s(useEmployees, \"zu+B1vqBt4NE8CVnT7D4kEu+FhI=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useEmployees","fetchWithCache","loading","employees","setEmployees","selectedEmployee","setSelectedEmployee","fetchAll","employeesData","error","console","fetchByEmployee","employeeId","employeeData","invalidateData","data"],"sources":["/workspaces/kazintree/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Employee } from \"../utils/types\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { EmployeeResult } from \"./types\";\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch();\n  const [employees, setEmployees] = useState<Employee[] | null>(null);\n  const [selectedEmployee, setSelectedEmployee] = useState<string | null>(null);\n\n  const fetchAll = useCallback(async () => {\n    try {\n      const employeesData = await fetchWithCache<Employee[]>(\"employees\");\n      setEmployees(employeesData);\n      setSelectedEmployee(null);\n    } catch (error) {\n      console.error(\"Error fetching all employees:\", error);\n    }\n  }, [fetchWithCache]);\n\n  const fetchByEmployee = useCallback(\n    async (employeeId: string) => {\n      try {\n        const employeeData = await fetchWithCache<Employee>(\n          `employees/${employeeId}`\n        );\n        setEmployees([employeeData]);\n        setSelectedEmployee(employeeId);\n      } catch (error) {\n        console.error(`Error fetching employee with ID ${employeeId}:`, error);\n      }\n    },\n    [fetchWithCache]\n  );\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n    setSelectedEmployee(null);\n  }, []);\n\n  return {\n    data: employees,\n    loading,\n    fetchAll,\n    fetchByEmployee,\n    invalidateData,\n    selectedEmployee,\n  };\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAgB,IAAhB,CAAxD;EAEA,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvC,IAAI;MACF,MAAMW,aAAa,GAAG,MAAMP,cAAc,CAAa,WAAb,CAA1C;MACAG,YAAY,CAACI,aAAD,CAAZ;MACAF,mBAAmB,CAAC,IAAD,CAAnB;IACD,CAJD,CAIE,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;IACD;EACF,CAR2B,EAQzB,CAACR,cAAD,CARyB,CAA5B;EAUA,MAAMU,eAAe,GAAGd,WAAW,CACjC,MAAOe,UAAP,IAA8B;IAC5B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMZ,cAAc,CACtC,aAAYW,UAAW,EADe,CAAzC;MAGAR,YAAY,CAAC,CAACS,YAAD,CAAD,CAAZ;MACAP,mBAAmB,CAACM,UAAD,CAAnB;IACD,CAND,CAME,OAAOH,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAe,mCAAkCG,UAAW,GAA5D,EAAgEH,KAAhE;IACD;EACF,CAXgC,EAYjC,CAACR,cAAD,CAZiC,CAAnC;EAeA,MAAMa,cAAc,GAAGjB,WAAW,CAAC,MAAM;IACvCO,YAAY,CAAC,IAAD,CAAZ;IACAE,mBAAmB,CAAC,IAAD,CAAnB;EACD,CAHiC,EAG/B,EAH+B,CAAlC;EAKA,OAAO;IACLS,IAAI,EAAEZ,SADD;IAELD,OAFK;IAGLK,QAHK;IAILI,eAJK;IAKLG,cALK;IAMLT;EANK,CAAP;AAQD;;GA3CeL,Y;UACsBD,c"},"metadata":{},"sourceType":"module"}